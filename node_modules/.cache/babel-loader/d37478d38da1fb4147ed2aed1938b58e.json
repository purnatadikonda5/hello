{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$();\n\nconst {\n  useState,\n  useEffect\n} = require(\"react\");\n\nconst UseServices = () => {\n  _s();\n\n  const [services, setServices] = useState([]);\n  useEffect(() => {\n    fetch(\"https://meditro-server-production.up.railway.app/services\").then(res => res.json()).then(data => setServices(data));\n  }, []);\n  return [services, setServices];\n};\n\n_s(UseServices, \"6zIv7VYIWrxuvR7GDZce08FfVgw=\");\n\n_c = UseServices;\n\nconst UseDoctors = () => {\n  _s2();\n\n  const [doctors, setDoctors] = useState([]);\n  useEffect(() => {\n    fetch(\"doctors.json\").then(res => res.json()).then(data => setDoctors(data));\n  }, []);\n  return [doctors, setDoctors];\n};\n\n_s2(UseDoctors, \"kcw5qKDPTTui1RDpe6DT6D3WwHo=\");\n\n_c2 = UseDoctors;\n\nconst UseFacilities = () => {\n  _s3();\n\n  const [facilities, setFacilities] = useState([]);\n  useEffect(() => {\n    fetch(\"facilities.json\").then(res => res.json()).then(data => setFacilities(data));\n  }, []);\n  return [facilities, setFacilities];\n};\n\n_s3(UseFacilities, \"zbPM2qBH6eUTeJSWFjOBMKUiyyg=\");\n\n_c3 = UseFacilities;\n\nconst UseService = id => {\n  _s4();\n\n  const [service, setService] = useState({});\n  const url = `https://meditro-server-production.up.railway.app/service/${id}`;\n  useEffect(() => {\n    fetch(url).then(res => res.json()).then(data => setService(data));\n  }, [url]);\n  return [service, setService];\n};\n\n_s4(UseService, \"eONGxV0/nfq5ENaUjb7Qz/l09iE=\");\n\n_c4 = UseService;\n\nconst UseToken = user => {\n  _s5();\n\n  const [token, setToken] = useState();\n  const [waiting, setWaiting] = useState(true);\n  useEffect(() => {\n    var _user$user;\n\n    const email = user === null || user === void 0 ? void 0 : (_user$user = user.user) === null || _user$user === void 0 ? void 0 : _user$user.email;\n    const url = `https://meditro-server-production.up.railway.app/login/${email}`;\n\n    const postData = async () => {\n      if (email) {\n        var _user$user2;\n\n        const userName = await (user === null || user === void 0 ? void 0 : (_user$user2 = user.user) === null || _user$user2 === void 0 ? void 0 : _user$user2.displayName);\n        const newUser = {\n          userName: userName,\n          email: email\n        };\n        await fetch(url, {\n          method: \"PUT\",\n          headers: {\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify(newUser)\n        }).then(res => res.json()).then(data => {\n          localStorage.setItem(\"accessToken\", data.token);\n          setToken(data);\n          setWaiting(false);\n        });\n      }\n    };\n\n    postData();\n  }, [user]);\n  return [token, waiting];\n};\n\n_s5(UseToken, \"ssUE12PNHo6FykVYny9nm+D/pz4=\");\n\n_c5 = UseToken;\n\nconst UseAdmin = user => {\n  _s6();\n\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const url = `https://meditro-server-production.up.railway.app/isAdmin/${user === null || user === void 0 ? void 0 : user.email}`;\n    fetch(url, {\n      method: \"GET\",\n      headers: {\n        authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n      }\n    }).then(res => res.json()).then(data => {\n      setIsAdmin(data.isAdmin);\n      setIsLoading(false);\n    });\n  }, [user]);\n  return [isAdmin, isLoading];\n};\n\n_s6(UseAdmin, \"DGZuFuourY8Gcwv0pccLq63yge4=\");\n\n_c6 = UseAdmin;\nexport { UseServices, UseDoctors, UseFacilities, UseService, UseToken, UseAdmin };\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"UseServices\");\n$RefreshReg$(_c2, \"UseDoctors\");\n$RefreshReg$(_c3, \"UseFacilities\");\n$RefreshReg$(_c4, \"UseService\");\n$RefreshReg$(_c5, \"UseToken\");\n$RefreshReg$(_c6, \"UseAdmin\");","map":{"version":3,"names":["useState","useEffect","require","UseServices","services","setServices","fetch","then","res","json","data","UseDoctors","doctors","setDoctors","UseFacilities","facilities","setFacilities","UseService","id","service","setService","url","UseToken","user","token","setToken","waiting","setWaiting","email","postData","userName","displayName","newUser","method","headers","body","JSON","stringify","localStorage","setItem","UseAdmin","isAdmin","setIsAdmin","isLoading","setIsLoading","authorization","getItem"],"sources":["/Users/purna/Downloads/MediTro-Health-Care-main/src/hooks.js"],"sourcesContent":["const { useState, useEffect } = require(\"react\");\n\nconst UseServices = () => {\n  const [services, setServices] = useState([]);\n  useEffect(() => {\n    fetch(\"https://meditro-server-production.up.railway.app/services\")\n      .then((res) => res.json())\n      .then((data) => setServices(data));\n  }, []);\n  return [services, setServices];\n};\n\nconst UseDoctors = () => {\n  const [doctors, setDoctors] = useState([]);\n  useEffect(() => {\n    fetch(\"doctors.json\")\n      .then((res) => res.json())\n      .then((data) => setDoctors(data));\n  }, []);\n  return [doctors, setDoctors];\n};\n\nconst UseFacilities = () => {\n  const [facilities, setFacilities] = useState([]);\n\n  useEffect(() => {\n    fetch(\"facilities.json\")\n      .then((res) => res.json())\n      .then((data) => setFacilities(data));\n  }, []);\n\n  return [facilities, setFacilities];\n};\nconst UseService = (id) => {\n  const [service, setService] = useState({});\n  const url = `https://meditro-server-production.up.railway.app/service/${id}`;\n\n  useEffect(() => {\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => setService(data));\n  }, [url]);\n\n  return [service, setService];\n};\nconst UseToken = (user) => {\n  const [token, setToken] = useState();\n  const [waiting, setWaiting] = useState(true);\n\n  useEffect(() => {\n    const email = user?.user?.email;\n    const url = `https://meditro-server-production.up.railway.app/login/${email}`;\n    const postData = async () => {\n      if (email) {\n        const userName = await user?.user?.displayName;\n        const newUser = { userName: userName, email: email };\n\n        await fetch(url, {\n          method: \"PUT\",\n          headers: {\n            \"content-type\": \"application/json\",\n          },\n          body: JSON.stringify(newUser),\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            localStorage.setItem(\"accessToken\", data.token);\n\n            setToken(data);\n            setWaiting(false);\n          });\n      }\n    };\n\n    postData();\n  }, [user]);\n\n  return [token, waiting];\n};\n\nconst UseAdmin = (user) => {\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const url = `https://meditro-server-production.up.railway.app/isAdmin/${user?.email}`;\n\n    fetch(url, {\n      method: \"GET\",\n      headers: {\n        authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setIsAdmin(data.isAdmin);\n        setIsLoading(false);\n      });\n  }, [user]);\n\n  return [isAdmin, isLoading];\n};\n\nexport {\n  UseServices,\n  UseDoctors,\n  UseFacilities,\n  UseService,\n  UseToken,\n  UseAdmin,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}