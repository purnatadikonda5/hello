{"ast":null,"code":"var _jsxFileName = \"/Users/purna/Downloads/MediTro-Health-Care-main/src/Pages/RequieAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // import { useAuthState } from \"react-firebase-hooks/auth\";\n\nimport Loading from \"../Components/Loading/Loading\"; // import auth from \"../firebaseConfig\";\n\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport { UseAdmin } from \"../hooks\"; // import { signOut } from \"firebase/auth\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RequieAdmin = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // let [user, loading] = useAuthState(auth);\n  const [isAdmin, isLoading] = UseAdmin(user);\n  let location = useLocation(); // if (loading || isLoading) {\n  //   return (\n  //     <>\n  //       <Loading />\n  //     </>\n  //   );\n  // }\n\n  if (isAdmin === false || !user) {\n    // Redirect them to the /login page, but save the current location they were\n    // trying to go to when they were redirected. This allows us to send them\n    // along to that page after they login, which is a nicer user experience\n    // than dropping them off on the home page.\n    // signOut(auth);\n    localStorage.removeItem(\"accessToken\");\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n\n  return children;\n};\n\n_s(RequieAdmin, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = RequieAdmin;\nexport default RequieAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequieAdmin\");","map":{"version":3,"names":["React","Loading","Navigate","useLocation","UseAdmin","RequieAdmin","children","isAdmin","isLoading","user","location","localStorage","removeItem","from"],"sources":["/Users/purna/Downloads/MediTro-Health-Care-main/src/Pages/RequieAdmin.js"],"sourcesContent":["import React from \"react\";\n// import { useAuthState } from \"react-firebase-hooks/auth\";\nimport Loading from \"../Components/Loading/Loading\";\n// import auth from \"../firebaseConfig\";\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport { UseAdmin } from \"../hooks\";\n// import { signOut } from \"firebase/auth\";\n\nconst RequieAdmin = ({ children }) => {\n  // let [user, loading] = useAuthState(auth);\n  const [isAdmin, isLoading] = UseAdmin(user);\n\n  let location = useLocation();\n\n  // if (loading || isLoading) {\n  //   return (\n  //     <>\n  //       <Loading />\n  //     </>\n  //   );\n  // }\n\n  if (isAdmin === false || !user) {\n    // Redirect them to the /login page, but save the current location they were\n    // trying to go to when they were redirected. This allows us to send them\n    // along to that page after they login, which is a nicer user experience\n    // than dropping them off on the home page.\n    // signOut(auth);\n    localStorage.removeItem(\"accessToken\");\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  return children;\n};\n\nexport default RequieAdmin;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,+BAApB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;AACA,SAASC,QAAT,QAAyB,UAAzB,C,CACA;;;;AAEA,MAAMC,WAAW,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACpC;EACA,MAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBJ,QAAQ,CAACK,IAAD,CAArC;EAEA,IAAIC,QAAQ,GAAGP,WAAW,EAA1B,CAJoC,CAMpC;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAII,OAAO,KAAK,KAAZ,IAAqB,CAACE,IAA1B,EAAgC;IAC9B;IACA;IACA;IACA;IACA;IACAE,YAAY,CAACC,UAAb,CAAwB,aAAxB;IACA,oBAAO,QAAC,QAAD;MAAU,EAAE,EAAC,QAAb;MAAsB,KAAK,EAAE;QAAEC,IAAI,EAAEH;MAAR,CAA7B;MAAiD,OAAO;IAAxD;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,OAAOJ,QAAP;AACD,CAzBD;;GAAMD,W;UAIWF,W;;;KAJXE,W;AA2BN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}